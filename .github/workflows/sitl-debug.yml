name: Build and Test

on:
  push:
    branches:
    - 'actions-apm'

jobs:
  dockcross-manylinux2010-x64:
    name: manylinux2010-x64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./build/manylinux2010-x64/third_party/install
          key: ${{ github.job }}-${{ hashFiles('./third_party/**') }}
      - name: disable superbuild on cache hit
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "superbuild=-DSUPERBUILD=OFF" >> $GITHUB_ENV && echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=/work/build/manylinux2010-x64/third_party/install" >> $GITHUB_ENV
      - name: setup dockcross
        run: docker run --rm dockcross/manylinux2010-x64 > ./dockcross-manylinux2010-x64; chmod +x ./dockcross-manylinux2010-x64
      - name: configure
        run: ./dockcross-manylinux2010-x64 cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=build/manylinux2010-x64/install -DBUILD_MAVSDK_SERVER=ON -DBUILD_SHARED_LIBS=OFF -DWERROR=OFF -Bbuild/manylinux2010-x64 -H.
      - name: build
        run: ./dockcross-manylinux2010-x64 cmake --build build/manylinux2010-x64 -j2 --target install
      - name: Publish artefacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'build/manylinux2010-x64/install/bin/mavsdk_server'
          asset_name: 'mavsdk_server_manylinux2010-x64'
          tag: ${{ github.ref }}
          overwrite: true
          
  macOS:
    name: ${{ matrix.name }}
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - name: macOS
            build-framework: OFF
          - name: macOS-framework
            build-framework: ON
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./build/macos/third_party/install
          key: ${{ github.job }}-${{ matrix.name }}-${{ hashFiles('./third_party/**') }}
      - name: fetch git tags for version
        run: git fetch --tags
      - name: disable superbuild on cache hit
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "superbuild=-DSUPERBUILD=OFF" >> $GITHUB_ENV && echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=$(pwd)/build/macos/third_party/install" >> $GITHUB_ENV
      - name: set SDKROOT value
        run: echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
      - name: configure
        run: cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=build/macos/install -DBUILD_MAVSDK_SERVER=ON -DBUILD_SHARED_LIBS=OFF -DMACOS_FRAMEWORK=${{ matrix.build-framework }} -DWERROR=OFF -Bbuild/macos -H.
      - name: build
        run: cmake --build build/macos -j2 --target install
      - name: test (core)
        run: ./build/macos/src/unit_tests_runner
      - name: test (mavsdk_server)
        run: ./build/macos/src/mavsdk_server/test/unit_tests_mavsdk_server
      - name: Upload framework as artefact
        if: ${{ matrix.build-framework == 'ON' }}
        uses: actions/upload-artifact@v2
        with:
          name: mavsdk_server_macos.framework
          path: ./build/macos/src/mavsdk_server/src/mavsdk_server.framework
          retention-days: 2
      - name: Publish mavsdk_server_macos to github release
        if: ${{ startsWith(github.ref, 'refs/tags/v') && matrix.build-framework == 'OFF' }}
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'build/macos/install/bin/mavsdk_server'
          asset_name: 'mavsdk_server_macos'
          tag: ${{ github.ref }}
          overwrite: true

  apm-sitl-newer:
    name: APM SITL ${{ matrix.apm_version }} (ubuntu-20.04)
    runs-on: ubuntu-20.04
    container: 
      image: khedar/mavsdk-ubuntu-20.04-apm-sitl-${{ matrix.apm_version }}
      options: --privileged
      env: 
        APM_HOME_LAT: 47.397742
        APM_HOME_LONG: 8.545594
        APM_HOME_ALT: 488.0
        APM_HOME_DIR: 180
        WORKDIR: "/home/user/MAVSDK"
        FIRMWARE_DIR: /home/user/ArduPilot
    strategy:
      matrix:
        apm_version: [rover-4.1.2, copter-4.1.2]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: "actions-apm"
      - name: test
        run: APM_VERSION=${{ matrix.apm_version }} tools/run-sitl-tests.sh /home/user/ArduPilot
        timeout-minutes: 45
